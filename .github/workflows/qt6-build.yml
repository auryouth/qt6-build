name: Build Qt6
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: windows-latest
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        pkg:
          [
            qt6-base,
            qt6-tools,
            qt6-svg,
            qt6-webengine,
            qt6-declarative,
            qt6-quick3d,
            qt6-serialport,
          ]
        version: [6.7.0]
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4

      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: >-
            zip
            git
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-ninja
            mingw-w64-ucrt-x86_64-python
            mingw-w64-ucrt-x86_64-qt6
            mingw-w64-ucrt-x86_64-assimp

      - name: clone and build
        run: |
          pkg=${{ matrix.pkg }}
          _pkgfn=${pkg/6-/}
          git clone -b v${{ matrix.version }}  https://code.qt.io/qt/${_pkgfn}.git
          cd ${_pkgfn}
          if [ -f .gitmodules ];then
              git submodule update --init --recursive
          fi
          cmake -B build -S $_pkgfn -G Ninja -DCMAKE_INSTALL_PREFIX=${{ matrix.pkg }}
          cmake --build build --parallel 4

      - name: package
        run: |
          cmake --install build
          cd ${{ matrix.pkg }}
          zip -r ${{ matrix.pkg }}-${{ matrix.version }}.zip .

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}-${{ matrix.version }}
          path: |
            ${{ matrix.pkg }}-${{ matrix.version }}.zip

  Upload-Release:
    permissions: write-all
    if: ${{ github.ref_type=='tag' }}
    needs: [build]
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: bin/
          merge-multiple: true

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: bin

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        if: ${{  success() }}
        with:
          tag_name: ${{ github.ref_name }}
          files: bin/*
          generate_release_notes: true
